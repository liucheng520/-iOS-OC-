//
//  YuCController.m
//  武汉二部iOS基础框架
//
//  Created by 苏荷 on 15/9/24.
//  Copyright (c) 2015年 BlueMobi. All rights reserved.
//  这个是主页面

#import "YuCController.h"
#import "YuCModel.h"
#import "YucMainTableViewCell.h"
#import "NSString+EMAdditions.h"
#import "EMStringStylingConfiguration.h"

#define kFileName @"ScottYu_MenueList"

@interface YuCController ()<UITableViewDataSource,UITableViewDelegate>

@property (nonatomic, strong) UITableView *scottTableView;  //主tableView列表

@property (nonatomic, strong) NSMutableArray<YuCModel> *dataArray;

@end

@implementation YuCController

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [EMStringStylingConfiguration sharedInstance].defaultFont  = [UIFont fontWithName:@"Avenir-Light" size:15];
    [EMStringStylingConfiguration sharedInstance].strongFont   = [UIFont fontWithName:@"Avenir" size:15];
    [EMStringStylingConfiguration sharedInstance].emphasisFont = [UIFont fontWithName:@"Avenir-LightOblique" size:15];
    
    
    // Then for the demo I created a bunch of custom styling class to provide examples
    
    // The code tag a little bit like in Github (custom font, custom color, a background color)
    EMStylingClass *aStylingClass = [[EMStylingClass alloc] initWithMarkup:@"<code>"];
    aStylingClass.color           = [UIColor colorWithWhite:0.5 alpha:1.000];
    aStylingClass.font            = [UIFont fontWithName:@"Courier" size:14];
    aStylingClass.attributes      = @{NSBackgroundColorAttributeName : [UIColor colorWithWhite:0.901 alpha:1.000]};
    [[EMStringStylingConfiguration sharedInstance] addNewStylingClass:aStylingClass];
    
    // A styling class for text in RED
    aStylingClass       = [[EMStylingClass alloc] initWithMarkup:@"<red>"];
    aStylingClass.color = [UIColor colorWithRed:0.773 green:0.000 blue:0.263 alpha:1.000];
    [[EMStringStylingConfiguration sharedInstance] addNewStylingClass:aStylingClass];
    
    // A styling class for text in GREEN
    aStylingClass       = [[EMStylingClass alloc] initWithMarkup:@"<green>"];
    aStylingClass.color = [UIColor colorWithRed:0.269 green:0.828 blue:0.392 alpha:1.000];
    [[EMStringStylingConfiguration sharedInstance] addNewStylingClass:aStylingClass];
    
    // A styling class for text with stroke
    aStylingClass            = [[EMStylingClass alloc] initWithMarkup:@"<stroke>"];
    aStylingClass.font       = [UIFont fontWithName:@"Avenir-Black" size:26];
    aStylingClass.color      = [UIColor whiteColor];
    aStylingClass.attributes = @{NSStrokeWidthAttributeName: @-6,
                                 NSStrokeColorAttributeName:[UIColor colorWithRed:0.111 green:0.568 blue:0.764 alpha:1.000]};
    [[EMStringStylingConfiguration sharedInstance] addNewStylingClass:aStylingClass];
    
}

- (void)creatNavgationItem
{
    self.navigationItem.title = @"Scott Yu's Home Page";
}

- (void)creatContentView
{
    [self.view addSubview:self.scottTableView];
}


#pragma mark - UITableView Delegate & DateSource
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return  [self.dataArray count];
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    YucMainTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"mainCell" forIndexPath:indexPath];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    YuCModel *model = [self.dataArray objectAtIndex:indexPath.row];
    
    [cell setCellValuesWithData:model];
    
    return cell;
}


- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    YuCModel *selectModel = [self.dataArray objectAtIndex:indexPath.row];
    
    Class someClass = NSClassFromString(selectModel.viewController);
    
    if(someClass == nil)
    {
        NSLog(@"找不到当前类：%@",selectModel.viewController);
        return;
    }
    
    id viewController = [someClass alloc];
    SEL sel = NSSelectorFromString(@"initWithDataModel:");
    if([viewController respondsToSelector:sel])
    {
       viewController = [viewController performSelector:sel withObject:selectModel];
    }
    else
    {
        viewController = [viewController init];
    }
    
    [self.navigationController pushViewController:viewController animated:YES];
}

#pragma mark - UIFactory
- (UITableView *)scottTableView
{
    if(!_scottTableView)
    {
        _scottTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, KScreenWidth, KScreenHeight - 64)];
        _scottTableView.estimatedRowHeight = 44.f;
        _scottTableView.rowHeight = UITableViewAutomaticDimension;
        _scottTableView.backgroundColor = [UIColor clearColor];
        _scottTableView.delegate = self;
        _scottTableView.dataSource = self;
        
        _scottTableView.tableFooterView = [UIView new];
        
        [_scottTableView registerNib:[UINib nibWithNibName:@"YucMainTableViewCell" bundle:nil] forCellReuseIdentifier:@"mainCell"];
    }
    return _scottTableView;
}


- (NSMutableArray<YuCModel> *)dataArray
{
    if(!_dataArray)
    {
        NSString *path = [[NSBundle mainBundle] pathForResource:@"ScottYu_MenueList" ofType:@"plist"];
        NSMutableDictionary *data = [[NSMutableDictionary alloc] initWithContentsOfFile:path];
        
        _dataArray = (NSMutableArray<YuCModel> *)[YuCModel objectArrayWithKeyValuesArray:data[@"UI"]];
        
    }
    return _dataArray;
}

@end


















